name: Test
on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

jobs:
  convene-web-test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PORT: 80
      APP_ROOT_URL: http://localhost
      CUSTOM_DOMAIN: http://system-test.zinc.local
      # Connect to locally-running Maildev for tests
      SMTP_PORT: 1025
      SMTP_DOMAIN: localhost
      SMTP_ENABLE_TLS: false

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Install Hivemind
      run: |
        sudo mkdir ~/bin/
        sudo wget -O ~/bin/hivemind.gz https://github.com/DarthSim/hivemind/releases/download/v1.0.6/hivemind-v1.0.6-linux-386.gz
        sudo gunzip ~/bin/hivemind.gz
        sudo chmod +x ~/bin/hivemind

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        # Use this directory for finding the Gemfile and other Ruby goodies.
        working-directory: 'convene-web'

    - name: Increase the amount of inotify watchers
      run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

    - name: Allow Ruby process to access port 80
      run: sudo setcap 'cap_net_bind_service=+ep' `which ruby`

    - name: Setup CI database.yml
      run: cd convene-web && cp config/database.yml.github-actions config/database.yml

    - name: Use Development mode env
      run: cd convene-web && cp .env.example .env

    # Yarn caching steps borroed from https://github.com/actions/cache/blob/main/examples.md#node---yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Setup environment
      run: |
          sudo chown -R $USER /usr/local/lib/node_modules
          sudo chown -R $USER /usr/local/bin/
          bin/setup

    - name: Start Rails server
      run: |
          export PATH=$PATH:~/bin
          bin/run &

    - name: Test convene-web
      run: |
          sudo sh -c "echo '127.0.0.1 system-test.zinc.local' >> /etc/hosts"
          # To trigger asset compile in development mode
          # TODO: Start server in production mode
          curl system-test.zinc.local 1> /dev/null
          bin/test

    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: feature-test-failed-screenshot
        path: features/test_reports/*.png
